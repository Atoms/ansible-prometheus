---
- name: Install {{ prometheus_software_name_version }} specific prerequisite software
  become: true
  package:
    name: '{{ prometheus_software_dependencies }}'
    state: present
  when: prometheus_software_dependencies is defined and prometheus_software_dependencies

- name: Include task to perform installation of {{ prometheus_software_name_version }} from binary
  include_tasks: _install_from_binary.yml
  when: prometheus_software_bin_url is defined and prometheus_software_bin_url and not prometheus_always_build_from_source

- name: Include task to perform installation of {{ prometheus_software_name_version }} by compiling go source
  include_tasks: _install_from_go_source.yml
  when: (prometheus_software_installation is not defined or (not prometheus_software_installation or (prometheus_software_installation.failed and (prometheus_software_fallback_to_build or prometheus_fallback_to_build)))) and prometheus_software_src_url is defined and prometheus_software_src_url

- name: Include task to symlink latest {{ prometheus_software_name_version }} directory to an "active" directory
  include_tasks: _install_active_symlink.yml

- name: Create {{ prometheus_software_name }} tgroup file for {{ ansible_hostname | default(inventory_hostname) }}
  become: true
  template:
    src: ../templates/tgroup_host.yml.j2
    dest: '{{ prometheus_managed_tgroup_dir }}/{{ ansible_hostname | default(inventory_hostname) }}-{{ prometheus_software_name }}.yml'
    owner: root
    group: '{{ prometheus_group }}'
    mode: '0640'
  delegate_to: '{{ prometheus_server_name }}'
  loop_control:
    loop_var: prometheus_server_name
  with_items: '{{ prometheus_servers }}'
  when: prometheus_servers is defined and prometheus_exporter and prometheus_manage_tgroups

- name: Allow incoming prometheus server connections to {{ prometheus_software_name }} via firewalld
  become: true
  firewalld:
    immediate: true
    port: '{{ prometheus_software_port }}/tcp'
    permanent: true
    source: '{{ prometheus_server_ip }}'
    state: enabled
    zone: '{{ prometheus_firewalld_zone }}'
  loop_control:
    loop_var: prometheus_server_ip
  with_items: "{{ prometheus_server_ips }}"
  when: prometheus_manage_firewalld is defined and prometheus_software_port | bool and prometheus_server_ips | bool
