---
- name: Verify {{ prometheus_software_name_version }} permissions
  become: true
  file:
    path: '{{ prometheus_software_binary }}'
    mode: 0755
    owner: root
    group: '{{ prometheus_group }}'

- name: 'Include task to setup {{ prometheus_software_name_version }} {{ ansible_service_mgr }} service'
  include_tasks: '_service_mgr_{{ ansible_service_mgr | regex_replace("^(openrc|upstart)$", "init") }}.yml'

- name: Allow incoming prometheus server connections to {{ prometheus_software_name }}:{{ prometheus_software_port }} via firewalld
  become: true
  firewalld:
    immediate: true
    port: '{{ prometheus_software_port }}/tcp'
    permanent: true
    source: '{{ prometheus_server_ip }}'
    state: enabled
    zone: '{{ prometheus_firewalld_zone }}'
  loop_control:
    loop_var: prometheus_server_ip
  with_items: "{{ prometheus_server_ips }}"
  when: prometheus_manage_client_firewalld and prometheus_software_port and prometheus_server_ips

- name: Allow incoming prometheus server connections to {{ prometheus_software_name }}:{{ prometheus_software_port }} via iptables
  become: true
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: '{{ prometheus_software_port }}'
    source: '{{ prometheus_server_ip }}'
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept new {{ prometheus_software_name }} connections
  loop_control:
    loop_var: prometheus_server_ip
  with_items: "{{ prometheus_server_ips }}"
  when: prometheus_manage_client_iptables and prometheus_software_port and prometheus_server_ips

- name: 'Test that {{ prometheus_software_service_name }}:{{ prometheus_software_port }} is accessible (software is running)'
  wait_for:
    host: '{{ prometheus_software_host | default("0.0.0.0", true) }}'
    port: '{{ prometheus_software_port }}'
    connect_timeout: 10
    state: started
    timeout: 30
  when: prometheus_software_service_test|bool and prometheus_software_port

- name: 'Test that {{ prometheus_software_service_name }}:{{ prometheus_software_port }} is accessible from the Prometheus servers'
  wait_for:
    host: '{{ inventory_hostname }}'
    port: '{{ prometheus_software_port }}'
    connect_timeout: 10
    state: started
    timeout: 30
  delegate_to: '{{ prometheus_server_name }}'
  loop_control:
    loop_var: prometheus_server_name
  with_items: '{{ prometheus_servers }}'
  when: prometheus_software_server_side_connect_test|bool and prometheus_software_port and prometheus_servers
