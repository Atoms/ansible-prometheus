---
- name: Gather Operating System specific variables
  include_vars: '{{ os_var_file }}'
  loop_control:
    loop_var: os_var_file
  with_first_found:
    - '../../vars/distribution/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
    - '../../vars/distribution/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'
    - '../../vars/distribution/{{ ansible_distribution }}.yml'
    - '../../vars/os/{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml'
    - '../../vars/os/{{ ansible_os_family }}.yml'

- block:
    - name: Update 'pacman' cache
      include_tasks: ../../tasks/_setup_pkg_mgr_Archlinux.yml
  when: ansible_os_family == 'Archlinux'

- name: Skip Java service tests on Gentoo
  set_fact:
    prometheus_cloudwatch_exporter_service_test: false
  when: ansible_os_family == 'Gentoo'

- name: Update 'apk' cache
  become: true
  apk:
    update_cache: true
  changed_when: false
  when: ansible_os_family == 'Alpine'

- name: Update 'apt' cache
  become: true
  apt:
    update_cache: true
  changed_when: false
  when: ansible_os_family == 'Debian'

- name: Set install sponge variable
  set_fact:
    prometheus_install_sponge: true
  when:
    - ansible_distribution not in ['CentOS']

- name: Workaround for OverlayFS on Fedora 20 and 21
  become: true
  shell: 'touch /var/lib/rpm/*'
  changed_when: false
  args:
    warn: false
  when: ansible_distribution == 'Fedora' and ansible_distribution_major_version in ['20', '21']

- name: Ensure dbus is running
  become: true
  service:
    name: dbus
    state: started
  changed_when: false
  when: ansible_service_mgr == 'systemd'

- name: Workaround for java version on Fedora 22
  become: true
  dnf:
    name: nss
    state: latest
  changed_when: false
  when: ansible_distribution == 'Fedora' and ansible_distribution_major_version == '22'

- name: Install java 8 on Alpine 3.3 through 3.5
  # This step is necessary due to poor Alpine version detection by Ansible,
  # otherwise this would be determined via variables like other distros
  become: true
  package:
    name: openjdk8-jre
    state: present
  changed_when: false
  register: prometheus_openjdk8_install
  retries: 5
  delay: 10
  until: prometheus_openjdk8_install is succeeded
  register: prometheus_java_install_alpine_override
  when:
    - prometheus_java_packages is defined and ansible_os_family == 'Alpine' and ansible_distribution_version is version('3.3', '>=') and ansible_distribution_version is version('3.6', '<')

- name: Install java
  become: true
  package:
    name: '{{ prometheus_java_packages }}'
    state: present
  changed_when: false
  register: prometheus_java_install
  retries: 5
  delay: 10
  until: prometheus_java_install is succeeded
  when: prometheus_java_packages is defined and prometheus_java_install_alpine_override is skipped

- name: Find all prometheus software
  delegate_to: localhost
  local_action: find paths="{{ lookup('env', 'PWD') }}/tasks" file_type=file excludes='_*.yml,main.yml'
  register: tasks

- name: Install prometheus testing prerequisite utilities
  become: true
  package:
    name: '{{ prometheus_testing_packages }}'
    state: present
  changed_when: false
  register: prometheus_testing_packages_install
  retries: 5
  delay: 10
  until: prometheus_testing_packages_install is succeeded
  when: prometheus_testing_packages is defined

- name: Create test log file
  become: true
  copy:
    dest: /var/log/test.log
    content: "{{ ansible_date_time.iso8601 }} This is a test\n"
    force: false

- block:
    - name: Create orphaned Prometheus script cron job
      become: true
      file:
        path: /etc/cron.d/prometheus_script_orphan
        state: touch
      # Ensure job is only run once for idempotency test
      when: prometheus_rules_dir_creation is defined and prometheus_rules_dir_creation.changed

    - name: Setup promcron test crontab jobs
      include_role:
        name: ../../../../ansible-prometheus
        tasks_from: _install_script_cron.yml
      vars:
        prometheus_setup_script_crons:
          - name: echo test1
            script: echo test1
          - name: echo test2
            minute: 10
            hour: 1
            day: 1
            weekday: 4
            month: 8
            script: echo test2
            user: prometheus

    - name: Setup promcron test cron file jobs
      include_role:
        name: ../../../../ansible-prometheus
        tasks_from: _install_script_cron.yml
      vars:
        prometheus_script_use_cron_files: true
        prometheus_setup_script_crons:
          - name: echo test3
            script: echo test3
            user: prometheus
          - name: echo test4
            minute: 20
            hour: 2
            day: 3
            weekday: 5
            month: 9
            script: echo test4
  when:
     - ansible_os_family not in ['Alpine']

- name: Create a orphaned Prometheus rules file to be purged while testing
  become: true
  file:
    path: '/opt/prometheus/etc/rules/orphan.rules'
    state: touch
  when:
    - prometheus_rules_dir_creation is defined and prometheus_rules_dir_creation.changed
    - prometheus_components is defined and "prometheus" in prometheus_components

- name: Re-run rules setup
  include_role:
    name: ../../../../ansible-prometheus
    tasks_from: _rules.yml
  when: prometheus_components is defined and "prometheus" in prometheus_components

- name: Setup ulimit file
  include_role:
    name: ../../../../ansible-prometheus
    tasks_from: _ulimits.yml
